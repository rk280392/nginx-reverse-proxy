# Site1 implementation
#
server {
    listen 80;
    server_name site1.local.com;
    server_tokens off;

    location / {
    include /etc/nginx/includes/proxy.conf;
    proxy_pass http://site1_site1_1:30008;   # name of docker container
  }
}

server {
    listen 443 ssl;
    server_name site1.rajesh-kumar.in;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/site1.rajesh-kumar.in/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/site1.rajesh-kumar.in/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
    include /etc/nginx/includes/proxy.conf;
    proxy_pass http://site1_site1_1:30008;
  }
}


# Site2 implementation

server {
    listen 80;
    server_name site2.local.com;
    server_tokens off;

    location / {
    include /etc/nginx/includes/proxy.conf;
    proxy_pass http://site2_site2_1:30008;     # name of docker container
  }
}


server {
    listen 443 ssl;
    server_name site2.rajesh-kumar.in;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/site2.rajesh-kumar.in/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/site2.rajesh-kumar.in/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
    include /etc/nginx/includes/proxy.conf;
    proxy_pass http://site2_site2_1:30008; # name of docker container
  }
}



# Default server block

server {
  listen 80 default_server;

  server_name _;
  root /var/www/html;

  charset UTF-8;

  error_page 404 /backend-not-found.html;
  location = /backend-not-found.html {
    allow   all;
  }
  location / {
    return 404;
  }

  access_log off;
  log_not_found off;
  error_log  /var/log/nginx/error.log error;
}
